.needs <std>
import HTTPResponce, HTTPMessage from "HTTP";
import Server from "HTTP/Server";
import GET, POST, PUT, DELETE from "HTTP/Endpoints";
import Content from "Web/Content";
import string from "String";
import Result from "Utils/Result";
import {accept, reject} from "Utils/Result" under res;
import GetTask from "./src/Content/GetTask";
import PostTask from "./src/Content/PostTask"; 
import DeleteTask from "./src/Content/DeleteTask";
import Index from "./src/Content/UI/Index";
import PlainContent from "./src/Content/UI/PlainContent";

import {printHex} from "io" under io;
import {print} from "String" under str;

class TodoList signs Server {
	Index indexMarkup = new Index();
	PlainContent indexJS = new PlainContent("./js/index.js");
	GetTask getTask = new GetTask();
	PostTask postTask = new PostTask();
	DeleteTask deleteTask = new DeleteTask();

	Result home() : GET("/") {
		let responce = new HTTPResponce(my.indexMarkup.render(), "200", "OK");
		responce.addHeader("Content-Type", "text/html");
		return res.accept(responce);
	};

	Result indexJavaScript() : GET("/js/index.js") {
		let responce = new HTTPResponce(my.indexJS.render(), "200", "OK");
		responce.addHeader("Content-Type", "text/javascript");
		return res.accept(responce);
	};

	Result getTasks(HTTPMessage message) : GET("/api/tasks") {
		adr taskID = message.query.get("id");
		return my.getTask.render(taskID);
	};

	Result postTasks(HTTPMessage message) : POST("/api/tasks") {
		return my.postTask.render(message.body);
	};

	Result deleteTasks(HTTPMessage message) : DELETE("/api/tasks") {
		adr taskID = message.query.get("id");
		return my.deleteTask.render(taskID);
	};

	TodoList init() {
		return my;
	};
};

int main(){
	let server = new TodoList();
	server.listen();
	return 0;
};
